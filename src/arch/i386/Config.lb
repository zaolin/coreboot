uses CONFIG_SMP
uses CONFIG_USE_INIT

init init/crt0.S.lb
ldscript init/ldscript.lb

makerule all
	depends	"linuxbios.rom"
end

makerule floppy 
	depends	"all" 
	action	"mcopy -o linuxbios.rom a:"
end

makerule nrv2b 
	depends	"$(TOP)/util/nrv2b/nrv2b.c"
	action	"$(HOSTCC) -O2 -DENCODE -DDECODE -DMAIN -DVERBOSE -DNDEBUG -DBITSIZE=32 -DENDIAN=0 $< -o $@"
end

makerule linuxbios.rom 
	depends	"linuxbios.strip buildrom" 
	action "./buildrom $< $@ $(PAYLOAD) $(ROM_IMAGE_SIZE) $(ROM_SECTION_SIZE)"
end

makerule crt0.S
	depends "$(CRT0)"
	action  "cp $< $@"
end

addaction clean "rm -f romimage payload.*"

if CONFIG_USE_INIT
	makerule init.o
        	depends "$(INIT-OBJECTS)"
	        action  "$(LD) -melf_i386 -r -o init.pre.o $(INIT-OBJECTS)"
	        action  "$(OBJCOPY) --rename-section .text=.init.text --rename-section .data=.init.data --rename-section .rodata=.init.rodata --rename-section .rodata.str1.1=.init.rodata.str1.1 init.pre.o init.o"
	end

	makerule linuxbios   
		depends	"crt0.o init.o linuxbios_ram.rom ldscript.ld"
		action	"$(CC) -nostdlib -nostartfiles -static -o $@ -T ldscript.ld crt0.o init.o"
		action	"$(CROSS_COMPILE)nm -n linuxbios | sort > linuxbios.map"
	end

end

dir lib
dir boot
if CONFIG_SMP
	dir smp
end
