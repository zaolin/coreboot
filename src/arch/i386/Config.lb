uses CONFIG_SMP

init init/crt0.S.lb
ldscript init/ldscript.lb

makerule all
	depends	"linuxbios.rom"
end

makerule floppy 
	depends	"all" 
	action	"mcopy -o linuxbios.rom a:"
end

makerule nrv2b 
	depends	"$(TOP)/util/nrv2b/nrv2b.c"
	action	"$(HOSTCC) -O2 -DENCODE -DDECODE -DMAIN -DVERBOSE -DNDEBUG -DBITSIZE=32 -DENDIAN=0 $< -o $@"
end

makerule linuxbios.rom 
	depends	"linuxbios.strip buildrom" 
	action "./buildrom $< $@ $(PAYLOAD) $(ROM_IMAGE_SIZE) $(ROM_SECTION_SIZE)"
	#action	"export size=`ls -l linuxbios.strip | (read p c u g size r ; echo $$size)` ; \\"
	#action	"echo $$size ; \\"
	#action	"dd if=linuxbios.strip of=linuxbios.rom bs=1 seek=`expr $(ROM_IMAGE_SIZE) - $$size`"
end

#makerule payload.block 
#	depends	"$(if $(PAYLOAD),$(PAYLOAD), /dev/null)"
#	action	"perl -e '@stats=stat(\"$<\"); $$sz=$$stats[7]; print "\xff" x ($(PAYLOAD_SIZE) - $$sz);' | cat $< - > $@"
#end

makerule crt0.S
	depends "$(CRT0)"
	action  "cp $< $@"
end

addaction clean "rm -f romimage payload.*"

dir lib
dir boot
if CONFIG_SMP
	dir smp
end
