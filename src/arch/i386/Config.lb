uses CONFIG_SMP
uses CONFIG_PRECOMPRESSED_PAYLOAD
uses CONFIG_USE_INIT
uses CONFIG_HAVE_FAILOVER_BOOT
uses CONFIG_USE_FAILOVER_IMAGE
uses CONFIG_USE_FALLBACK_IMAGE

init init/crt0.S.lb

if CONFIG_USE_FAILOVER_IMAGE
else
	initobject /src/lib/cbfs.o
	initobject /src/lib/lzma.o
end

if CONFIG_HAVE_FAILOVER_BOOT
	if CONFIG_USE_FAILOVER_IMAGE
		ldscript init/ldscript_failover.lb
	else
			ldscript init/ldscript_cbfs.lb
	end
else
	if CONFIG_USE_FALLBACK_IMAGE
		ldscript init/ldscript_fallback_cbfs.lb
	else
		ldscript init/ldscript_cbfs.lb
	end
end

makerule all
	depends	"coreboot.rom"
end

makerule floppy 
	depends	"all" 
	action	"mcopy -o coreboot.rom a:"
end

makerule nrv2b 
	depends	"$(TOP)/util/nrv2b/nrv2b.c"
	action	"$(HOSTCC) -O2 -DENCODE -DDECODE -DMAIN -DVERBOSE -DNDEBUG -DBITSIZE=32 -DENDIAN=0 $< -o $@"
end

if CONFIG_USE_FAILOVER_IMAGE
	makedefine COREBOOT_APC:=
	makedefine COREBOOT_RAM_ROM:=
end

makerule crt0.S
	depends "$(CONFIG_CRT0)"
	action  "cp $< $@"
end

addaction clean "rm -f romimage payload.*"

if CONFIG_USE_INIT
	makerule init.o
        	depends "$(INIT-OBJECTS)"
	        action  "$(LD) -melf_i386 -r -o init.pre.o $(INIT-OBJECTS)"
	        action  "$(CONFIG_OBJCOPY) --rename-section .text=.init.text --rename-section .data=.init.data --rename-section .rodata=.init.rodata --rename-section .rodata.str1.1=.init.rodata.str1.1 init.pre.o init.o"
	end

        makerule coreboot   
		depends	"crt0.o init.o $(COREBOOT_APC) $(COREBOOT_RAM_ROM) ldscript.ld"
		action	"$(CC) -nostdlib -nostartfiles -static -o $@ -T ldscript.ld crt0.o init.o"
		action	"$(CONFIG_CROSS_COMPILE)nm -n coreboot | sort > coreboot.map"
        end

end

dir lib
dir boot
if CONFIG_SMP
	dir smp
end
