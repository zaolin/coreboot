#!/bin/sh
#
# Copyright (C) 2003 Stefan Reinauer
# 
# See the file "COPYING" for further information about
# the copyright and warranty status of this work.
# 
# tag: target system test script.

if [ "$CC" == "" ]; then
  CC=gcc
fi

echo "void *pointersize;" > types.c
${CC} -c -o types.o types.c 
PTRSIZE=$(( 8 * 0x`nm types.o| grep pointersize | cut -f1 -d\ ` ))
rm -f types.c types.o

case "$PTRSIZE" in
32)	cell="int32_t   "; ucell="uint32_t "; 
	dcell="int64_t  "; ducell="uint64_t"
	;;
64)	cell="int64_t      "; ucell="uint64_t    "
	dcell="__int128_t  "; ducell="__uint128_t"
	;;
*) echo "Unsupported ${PTRSIZE}bit platform. please report."; exit 1 ;;
esac

echo -e "found ${PTRSIZE}bit platform, creating \"types.h\""

echo "/* tag: data types for forth engine
 *
 * This file is autogenerated by types.sh. Do not edit!
 *
 * Copyright (C) 2003 Patrick Mauritz, Stefan Reinauer
 *
 * See the file \"COPYING\" for further information about
 * the copyright and warranty status of this work.
 */

#ifndef __TYPES_H
#define __TYPES_H

#include <stdint.h>

/* cell based types */

typedef $cell cell;
typedef $ucell ucell;
typedef $dcell dcell;
typedef $ducell ducell;

#define bitspercell (sizeof(cell)<<3)
#define bitsperdcell (sizeof(dcell)<<3)

/* size named types */

typedef unsigned char   u8;
typedef unsigned short u16;
typedef unsigned int   u32;

typedef char   s8;
typedef short s16;
typedef int   s32;

#endif" > types.h.new

test -r types.h || mv types.h.new types.h 
